{"version":3,"sources":["../../../../server/api/image/image.controller.js"],"names":[],"mappings":"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","file":"image.controller.js","sourcesContent":["/**\r\n * Using Rails-like standard naming convention for endpoints.\r\n * GET     /api/images              ->  index\r\n * POST    /api/images              ->  create\r\n * GET     /api/images/:id          ->  show\r\n * PUT     /api/images/:id          ->  update\r\n * DELETE  /api/images/:id          ->  destroy\r\n */\r\n\r\n'use strict';\r\n\r\nimport _ from 'lodash';\r\nimport Image from './image.model';\r\nimport fs from 'fs';\r\n\r\nfunction respondWithResult(res, err, files, statusCode) {\r\n  statusCode = statusCode || 200;\r\n  console.log(\r\n    files\r\n  );\r\n      res.status(statusCode).json(files).end();\r\n}\r\n\r\nfunction saveUpdates(updates) {\r\n  return function(entity) {\r\n    var updated = _.merge(entity, updates);\r\n    return updated.save()\r\n      .then(updated => {\r\n        return updated;\r\n      });\r\n  };\r\n}\r\n\r\nfunction removeEntity(res) {\r\n  return function(entity) {\r\n    if (entity) {\r\n      return entity.remove()\r\n        .then(() => {\r\n          res.status(204).end();\r\n        });\r\n    }\r\n  };\r\n}\r\n\r\nfunction handleEntityNotFound(res) {\r\n  return function(entity) {\r\n    if (!entity) {\r\n      res.status(404).end();\r\n      return null;\r\n    }\r\n    return entity;\r\n  };\r\n}\r\n\r\nfunction handleError(res, statusCode) {\r\n  statusCode = statusCode || 500;\r\n  return function(err) {\r\n    res.status(statusCode).send(err);\r\n  };\r\n}\r\n\r\n// Gets a list of Images\r\nexport function index(req, res) {\r\n  return fs.readdir('../client/assets/images/gallery/', function(err, files) {\r\n    if (err) {\r\n      console.log(err);\r\n      return respondWithResult(res, err, files, 500);\r\n    }\r\n    console.log(files.length);\r\n    return respondWithResult(res, err, files);\r\n  });\r\n}\r\n\r\n// Gets a single Image from the DB\r\nexport function show(req, res) {\r\n  return Image.findById(req.params.id).exec()\r\n    .then(handleEntityNotFound(res))\r\n    .then(respondWithResult(res))\r\n    .catch(handleError(res));\r\n}\r\n\r\n// Creates a new Image in the DB\r\nexport function create(req, res) {\r\n  return Image.create(req.body)\r\n    .then(respondWithResult(res, 201))\r\n    .catch(handleError(res));\r\n}\r\n\r\n// Updates an existing Image in the DB\r\nexport function update(req, res) {\r\n  if (req.body._id) {\r\n    delete req.body._id;\r\n  }\r\n  return Image.findById(req.params.id).exec()\r\n    .then(handleEntityNotFound(res))\r\n    .then(saveUpdates(req.body))\r\n    .then(respondWithResult(res))\r\n    .catch(handleError(res));\r\n}\r\n\r\n// Deletes a Image from the DB\r\nexport function destroy(req, res) {\r\n  return Image.findById(req.params.id).exec()\r\n    .then(handleEntityNotFound(res))\r\n    .then(removeEntity(res))\r\n    .catch(handleError(res));\r\n}\r\n"]}