{"version":3,"sources":["../../../../server/api/que-se-ofrece/index.spec.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,aAAa,QAAQ,YAAR,EAAsB,eAAtB,EAAjB;;AAEA,IAAI,sBAAsB;AACxB,SAAO,uBADiB;AAExB,QAAM,sBAFkB;AAGxB,UAAQ,wBAHgB;AAIxB,UAAQ,wBAJgB;AAKxB,WAAS;AALe,CAA1B;;AAQA,IAAI,aAAa;AACf,OAAK,MAAM,GAAN,EADU;AAEf,OAAK,MAAM,GAAN,EAFU;AAGf,SAAO,MAAM,GAAN,EAHQ;AAIf,QAAM,MAAM,GAAN,EAJS;AAKf,UAAQ,MAAM,GAAN;AALO,CAAjB;;;AASA,IAAI,mBAAmB,WAAW,YAAX,EAAyB;AAC9C,aAAW;AACT,YAAQ,kBAAW;AACjB,aAAO,UAAP;AACD;AAHQ,GADmC;AAM9C,gCAA8B;AANgB,CAAzB,CAAvB;;AASA,SAAS,yBAAT,EAAoC,YAAW;;AAE7C,KAAG,0CAAH,EAA+C,YAAW;AACxD,qBAAiB,MAAjB,CAAwB,KAAxB,CAA8B,UAA9B;AACD,GAFD;;AAIA,WAAS,yBAAT,EAAoC,YAAW;;AAE7C,OAAG,8CAAH,EAAmD,YAAW;AAC5D,iBAAW,GAAX,CACG,QADH,CACY,GADZ,EACiB,uBADjB,EAEG,MAFH,CAEU,IAFV,CAEe,IAFf,CAEoB,UAFpB;AAGD,KAJD;AAMD,GARD;;AAUA,WAAS,6BAAT,EAAwC,YAAW;;AAEjD,OAAG,6CAAH,EAAkD,YAAW;AAC3D,iBAAW,GAAX,CACG,QADH,CACY,MADZ,EACoB,sBADpB,EAEG,MAFH,CAEU,IAFV,CAEe,IAFf,CAEoB,UAFpB;AAGD,KAJD;AAMD,GARD;;AAUA,WAAS,0BAAT,EAAqC,YAAW;;AAE9C,OAAG,+CAAH,EAAoD,YAAW;AAC7D,iBAAW,IAAX,CACG,QADH,CACY,GADZ,EACiB,wBADjB,EAEG,MAFH,CAEU,IAFV,CAEe,IAFf,CAEoB,UAFpB;AAGD,KAJD;AAMD,GARD;;AAUA,WAAS,6BAAT,EAAwC,YAAW;;AAEjD,OAAG,+CAAH,EAAoD,YAAW;AAC7D,iBAAW,GAAX,CACG,QADH,CACY,MADZ,EACoB,wBADpB,EAEG,MAFH,CAEU,IAFV,CAEe,IAFf,CAEoB,UAFpB;AAGD,KAJD;AAMD,GARD;;AAUA,WAAS,+BAAT,EAA0C,YAAW;;AAEnD,OAAG,+CAAH,EAAoD,YAAW;AAC7D,iBAAW,KAAX,CACG,QADH,CACY,MADZ,EACoB,wBADpB,EAEG,MAFH,CAEU,IAFV,CAEe,IAFf,CAEoB,UAFpB;AAGD,KAJD;AAMD,GARD;;AAUA,WAAS,gCAAT,EAA2C,YAAW;;AAEpD,OAAG,gDAAH,EAAqD,YAAW;AAC9D,iBAAW,MAAX,CACG,QADH,CACY,MADZ,EACoB,yBADpB,EAEG,MAFH,CAEU,IAFV,CAEe,IAFf,CAEoB,UAFpB;AAGD,KAJD;AAMD,GARD;AAUD,CAlED","file":"index.spec.js","sourcesContent":["'use strict';\r\n\r\nvar proxyquire = require('proxyquire').noPreserveCache();\r\n\r\nvar queSeOfreceCtrlStub = {\r\n  index: 'queSeOfreceCtrl.index',\r\n  show: 'queSeOfreceCtrl.show',\r\n  create: 'queSeOfreceCtrl.create',\r\n  update: 'queSeOfreceCtrl.update',\r\n  destroy: 'queSeOfreceCtrl.destroy'\r\n};\r\n\r\nvar routerStub = {\r\n  get: sinon.spy(),\r\n  put: sinon.spy(),\r\n  patch: sinon.spy(),\r\n  post: sinon.spy(),\r\n  delete: sinon.spy()\r\n};\r\n\r\n// require the index with our stubbed out modules\r\nvar queSeOfreceIndex = proxyquire('./index.js', {\r\n  'express': {\r\n    Router: function() {\r\n      return routerStub;\r\n    }\r\n  },\r\n  './que-se-ofrece.controller': queSeOfreceCtrlStub\r\n});\r\n\r\ndescribe('QueSeOfrece API Router:', function() {\r\n\r\n  it('should return an express router instance', function() {\r\n    queSeOfreceIndex.should.equal(routerStub);\r\n  });\r\n\r\n  describe('GET /api/que-se-ofreces', function() {\r\n\r\n    it('should route to queSeOfrece.controller.index', function() {\r\n      routerStub.get\r\n        .withArgs('/', 'queSeOfreceCtrl.index')\r\n        .should.have.been.calledOnce;\r\n    });\r\n\r\n  });\r\n\r\n  describe('GET /api/que-se-ofreces/:id', function() {\r\n\r\n    it('should route to queSeOfrece.controller.show', function() {\r\n      routerStub.get\r\n        .withArgs('/:id', 'queSeOfreceCtrl.show')\r\n        .should.have.been.calledOnce;\r\n    });\r\n\r\n  });\r\n\r\n  describe('POST /api/que-se-ofreces', function() {\r\n\r\n    it('should route to queSeOfrece.controller.create', function() {\r\n      routerStub.post\r\n        .withArgs('/', 'queSeOfreceCtrl.create')\r\n        .should.have.been.calledOnce;\r\n    });\r\n\r\n  });\r\n\r\n  describe('PUT /api/que-se-ofreces/:id', function() {\r\n\r\n    it('should route to queSeOfrece.controller.update', function() {\r\n      routerStub.put\r\n        .withArgs('/:id', 'queSeOfreceCtrl.update')\r\n        .should.have.been.calledOnce;\r\n    });\r\n\r\n  });\r\n\r\n  describe('PATCH /api/que-se-ofreces/:id', function() {\r\n\r\n    it('should route to queSeOfrece.controller.update', function() {\r\n      routerStub.patch\r\n        .withArgs('/:id', 'queSeOfreceCtrl.update')\r\n        .should.have.been.calledOnce;\r\n    });\r\n\r\n  });\r\n\r\n  describe('DELETE /api/que-se-ofreces/:id', function() {\r\n\r\n    it('should route to queSeOfrece.controller.destroy', function() {\r\n      routerStub.delete\r\n        .withArgs('/:id', 'queSeOfreceCtrl.destroy')\r\n        .should.have.been.calledOnce;\r\n    });\r\n\r\n  });\r\n\r\n});\r\n"]}