{"version":3,"sources":["../../../../server/api/que-se-ofrece/index.spec.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,aAAa,QAAQ,YAAR,EAAsB,eAAtB,EAAjB;;AAEA,IAAI,sBAAsB;AACxB,SAAO,uBADiB;AAExB,QAAM,sBAFkB;AAGxB,UAAQ,wBAHgB;AAIxB,UAAQ,wBAJgB;AAKxB,WAAS;AALe,CAA1B;;AAQA,IAAI,aAAa;AACf,OAAK,MAAM,GAAN,EADU;AAEf,OAAK,MAAM,GAAN,EAFU;AAGf,SAAO,MAAM,GAAN,EAHQ;AAIf,QAAM,MAAM,GAAN,EAJS;AAKf,UAAQ,MAAM,GAAN;AALO,CAAjB;;;AASA,IAAI,mBAAmB,WAAW,YAAX,EAAyB;AAC9C,aAAW;AACT,YAAQ,kBAAW;AACjB,aAAO,UAAP;AACD;AAHQ,GADmC;AAM9C,gCAA8B;AANgB,CAAzB,CAAvB;;AASA,SAAS,yBAAT,EAAoC,YAAW;;AAE7C,KAAG,0CAAH,EAA+C,YAAW;AACxD,qBAAiB,MAAjB,CAAwB,KAAxB,CAA8B,UAA9B;AACD,GAFD;;AAIA,WAAS,yBAAT,EAAoC,YAAW;;AAE7C,OAAG,8CAAH,EAAmD,YAAW;AAC5D,iBAAW,GAAX,CACG,QADH,CACY,GADZ,EACiB,uBADjB,EAEG,MAFH,CAEU,IAFV,CAEe,IAFf,CAEoB,UAFpB;AAGD,KAJD;AAMD,GARD;;AAUA,WAAS,6BAAT,EAAwC,YAAW;;AAEjD,OAAG,6CAAH,EAAkD,YAAW;AAC3D,iBAAW,GAAX,CACG,QADH,CACY,MADZ,EACoB,sBADpB,EAEG,MAFH,CAEU,IAFV,CAEe,IAFf,CAEoB,UAFpB;AAGD,KAJD;AAMD,GARD;;AAUA,WAAS,0BAAT,EAAqC,YAAW;;AAE9C,OAAG,+CAAH,EAAoD,YAAW;AAC7D,iBAAW,IAAX,CACG,QADH,CACY,GADZ,EACiB,wBADjB,EAEG,MAFH,CAEU,IAFV,CAEe,IAFf,CAEoB,UAFpB;AAGD,KAJD;AAMD,GARD;;AAUA,WAAS,6BAAT,EAAwC,YAAW;;AAEjD,OAAG,+CAAH,EAAoD,YAAW;AAC7D,iBAAW,GAAX,CACG,QADH,CACY,MADZ,EACoB,wBADpB,EAEG,MAFH,CAEU,IAFV,CAEe,IAFf,CAEoB,UAFpB;AAGD,KAJD;AAMD,GARD;;AAUA,WAAS,+BAAT,EAA0C,YAAW;;AAEnD,OAAG,+CAAH,EAAoD,YAAW;AAC7D,iBAAW,KAAX,CACG,QADH,CACY,MADZ,EACoB,wBADpB,EAEG,MAFH,CAEU,IAFV,CAEe,IAFf,CAEoB,UAFpB;AAGD,KAJD;AAMD,GARD;;AAUA,WAAS,gCAAT,EAA2C,YAAW;;AAEpD,OAAG,gDAAH,EAAqD,YAAW;AAC9D,iBAAW,MAAX,CACG,QADH,CACY,MADZ,EACoB,yBADpB,EAEG,MAFH,CAEU,IAFV,CAEe,IAFf,CAEoB,UAFpB;AAGD,KAJD;AAMD,GARD;AAUD,CAlED","file":"index.spec.js","sourcesContent":["'use strict';\n\nvar proxyquire = require('proxyquire').noPreserveCache();\n\nvar queSeOfreceCtrlStub = {\n  index: 'queSeOfreceCtrl.index',\n  show: 'queSeOfreceCtrl.show',\n  create: 'queSeOfreceCtrl.create',\n  update: 'queSeOfreceCtrl.update',\n  destroy: 'queSeOfreceCtrl.destroy'\n};\n\nvar routerStub = {\n  get: sinon.spy(),\n  put: sinon.spy(),\n  patch: sinon.spy(),\n  post: sinon.spy(),\n  delete: sinon.spy()\n};\n\n// require the index with our stubbed out modules\nvar queSeOfreceIndex = proxyquire('./index.js', {\n  'express': {\n    Router: function() {\n      return routerStub;\n    }\n  },\n  './que-se-ofrece.controller': queSeOfreceCtrlStub\n});\n\ndescribe('QueSeOfrece API Router:', function() {\n\n  it('should return an express router instance', function() {\n    queSeOfreceIndex.should.equal(routerStub);\n  });\n\n  describe('GET /api/que-se-ofreces', function() {\n\n    it('should route to queSeOfrece.controller.index', function() {\n      routerStub.get\n        .withArgs('/', 'queSeOfreceCtrl.index')\n        .should.have.been.calledOnce;\n    });\n\n  });\n\n  describe('GET /api/que-se-ofreces/:id', function() {\n\n    it('should route to queSeOfrece.controller.show', function() {\n      routerStub.get\n        .withArgs('/:id', 'queSeOfreceCtrl.show')\n        .should.have.been.calledOnce;\n    });\n\n  });\n\n  describe('POST /api/que-se-ofreces', function() {\n\n    it('should route to queSeOfrece.controller.create', function() {\n      routerStub.post\n        .withArgs('/', 'queSeOfreceCtrl.create')\n        .should.have.been.calledOnce;\n    });\n\n  });\n\n  describe('PUT /api/que-se-ofreces/:id', function() {\n\n    it('should route to queSeOfrece.controller.update', function() {\n      routerStub.put\n        .withArgs('/:id', 'queSeOfreceCtrl.update')\n        .should.have.been.calledOnce;\n    });\n\n  });\n\n  describe('PATCH /api/que-se-ofreces/:id', function() {\n\n    it('should route to queSeOfrece.controller.update', function() {\n      routerStub.patch\n        .withArgs('/:id', 'queSeOfreceCtrl.update')\n        .should.have.been.calledOnce;\n    });\n\n  });\n\n  describe('DELETE /api/que-se-ofreces/:id', function() {\n\n    it('should route to queSeOfrece.controller.destroy', function() {\n      routerStub.delete\n        .withArgs('/:id', 'queSeOfreceCtrl.destroy')\n        .should.have.been.calledOnce;\n    });\n\n  });\n\n});\n"]}