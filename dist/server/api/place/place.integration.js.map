{"version":3,"sources":["../../../../server/api/place/place.integration.js"],"names":[],"mappings":"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","file":"place.integration.js","sourcesContent":["'use strict';\r\n\r\nvar app = require('../..');\r\nimport request from 'supertest';\r\n\r\nvar newPlace;\r\n\r\ndescribe('Place API:', function() {\r\n\r\n  describe('GET /api/places', function() {\r\n    var places;\r\n\r\n    beforeEach(function(done) {\r\n      request(app)\r\n        .get('/api/places')\r\n        .expect(200)\r\n        .expect('Content-Type', /json/)\r\n        .end((err, res) => {\r\n          if (err) {\r\n            return done(err);\r\n          }\r\n          places = res.body;\r\n          done();\r\n        });\r\n    });\r\n\r\n    it('should respond with JSON array', function() {\r\n      places.should.be.instanceOf(Array);\r\n    });\r\n\r\n  });\r\n\r\n  describe('POST /api/places', function() {\r\n    beforeEach(function(done) {\r\n      request(app)\r\n        .post('/api/places')\r\n        .send({\r\n          name: 'New Place',\r\n          info: 'This is the brand new place!!!'\r\n        })\r\n        .expect(201)\r\n        .expect('Content-Type', /json/)\r\n        .end((err, res) => {\r\n          if (err) {\r\n            return done(err);\r\n          }\r\n          newPlace = res.body;\r\n          done();\r\n        });\r\n    });\r\n\r\n    it('should respond with the newly created place', function() {\r\n      newPlace.name.should.equal('New Place');\r\n      newPlace.info.should.equal('This is the brand new place!!!');\r\n    });\r\n\r\n  });\r\n\r\n  describe('GET /api/places/:id', function() {\r\n    var place;\r\n\r\n    beforeEach(function(done) {\r\n      request(app)\r\n        .get('/api/places/' + newPlace._id)\r\n        .expect(200)\r\n        .expect('Content-Type', /json/)\r\n        .end((err, res) => {\r\n          if (err) {\r\n            return done(err);\r\n          }\r\n          place = res.body;\r\n          done();\r\n        });\r\n    });\r\n\r\n    afterEach(function() {\r\n      place = {};\r\n    });\r\n\r\n    it('should respond with the requested place', function() {\r\n      place.name.should.equal('New Place');\r\n      place.info.should.equal('This is the brand new place!!!');\r\n    });\r\n\r\n  });\r\n\r\n  describe('PUT /api/places/:id', function() {\r\n    var updatedPlace;\r\n\r\n    beforeEach(function(done) {\r\n      request(app)\r\n        .put('/api/places/' + newPlace._id)\r\n        .send({\r\n          name: 'Updated Place',\r\n          info: 'This is the updated place!!!'\r\n        })\r\n        .expect(200)\r\n        .expect('Content-Type', /json/)\r\n        .end(function(err, res) {\r\n          if (err) {\r\n            return done(err);\r\n          }\r\n          updatedPlace = res.body;\r\n          done();\r\n        });\r\n    });\r\n\r\n    afterEach(function() {\r\n      updatedPlace = {};\r\n    });\r\n\r\n    it('should respond with the updated place', function() {\r\n      updatedPlace.name.should.equal('Updated Place');\r\n      updatedPlace.info.should.equal('This is the updated place!!!');\r\n    });\r\n\r\n  });\r\n\r\n  describe('DELETE /api/places/:id', function() {\r\n\r\n    it('should respond with 204 on successful removal', function(done) {\r\n      request(app)\r\n        .delete('/api/places/' + newPlace._id)\r\n        .expect(204)\r\n        .end((err, res) => {\r\n          if (err) {\r\n            return done(err);\r\n          }\r\n          done();\r\n        });\r\n    });\r\n\r\n    it('should respond with 404 when place does not exist', function(done) {\r\n      request(app)\r\n        .delete('/api/places/' + newPlace._id)\r\n        .expect(404)\r\n        .end((err, res) => {\r\n          if (err) {\r\n            return done(err);\r\n          }\r\n          done();\r\n        });\r\n    });\r\n\r\n  });\r\n\r\n});\r\n"]}